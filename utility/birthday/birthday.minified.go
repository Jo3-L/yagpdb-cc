{{$w:=cslice 668707598870118403 673258482211749917}}{{$h:=730216142924415006}}{{$m:="Congratulations for your birthday!"}}{{$b:=false}}{{$c:=false}}{{$d:=true}}{{$r:=false}}{{$C:=""}}{{$s:=""}}{{$D:=0}}{{$t:=0}}{{$x:=0}}{{$g:=false}}{{$e:=false}}{{$y:=.User}}{{$i:=""}}{{$j:=sdict}}{{$z:=cslice}}{{$E:=""}}{{$A:=false}}{{$k:=""}}{{$u:=sdict}}{{$v:=86400}}{{$f:="Correct date syntax is: `dd/mm/yyyy` - Example: `20/12/1998`"}}{{$a:="Correct date syntax is: `mm/dd/yyyy` - Example: `12/20/1998`"}}{{$B:="Correct usage: -getbday @user"}}{{range .Member.Roles}}{{if in $w .}}{{$r =true}}{{end}}{{end}}{{if not .ExecData}}{{if reFind `(?i)(my|set)` .Cmd}}{{with .CmdArgs}}{{$C =split (index . 0) "/"}}{{if and (eq (len .) 2) $r}}{{with index . 1 | userArg}}{{$y =.}}{{else}}{{$s ="Invalid User."}}{{end}}{{end}}{{end}}{{with $C}}{{if eq (len .) 3}}{{$n:=0}}{{$x:=index . 2 | toInt}}{{if $b}}{{$D =index . 1 | toInt}}{{$t =index . 0 | toInt}}{{else}}{{$D =index . 0 | toInt}}{{$t =index . 1 | toInt}}{{end}}{{with $D}}{{if or (gt . 31) (lt . 1)}}{{$s =print $s "\nInvalid Day."}}{{else}}{{$n =add $n 1}}{{end}}{{end}}{{with $t}}{{if or (gt . 12) (lt . 1)}}{{$s =print $s "\nInvalid Month."}}{{else}}{{$n =add $n 1}}{{end}}{{end}}{{if not $x}}{{$s =print $s "\nInvalid Year."}}{{else}}{{$n =add $n 1}}{{end}}{{$i =newDate $x $t $D 0 0 0}}{{if and (eq $n 3) (eq (printf "%d" $i.Month) (str $t)) (eq (printf "%d" $i.Day) (str $D)) (eq (printf "%d" $i.Year) (str $x))}}{{$n =add $n 1}}{{else if (or (not $s) (eq $s "Invalid User."))}}{{$s =print $s "\nInvalid Date (usually day 31 on a 30 day month, or 29 of Feb in a non leap year)"}}{{end}}{{if eq $n 4}}{{$e =true}}{{if lt ((currentTime.Sub $i).Hours | toInt) 113880}}{{$g =true}}{{end}}{{end}}{{else}}{{if $b}}{{$s =$a}}{{else}}{{$s =$f}}{{end}}{{end}}{{else}}{{if $b}}{{$s =$a}}{{else}}{{$s =$f}}{{end}}{{end}}{{end}}{{end}}{{if $e}}{{$k =printf "%d" $i.Month | toInt}}{{with (dbGet $k "bdays").Value}}{{$j =sdict .}}{{end}}{{end}}{{if and $g $c (not $d) (not $r)}}{{execAdmin "kick" $y "We do not allow users under 13 in this server."}}{{end}}{{if and $g $d (not $r)}}{{execAdmin "ban" $y "We do not allow users under 13 in this server."}}{{end}}{{with .ExecData}}{{if eq (printf "%T" .) "int64"}}{{scheduleUniqueCC $.CCID $h . "bdays" true}}{{end}}{{dbDel (currentTime.Add (mult -24 $.TimeHour | toDuration)).Day "bdayannounced"}}{{with (dbGet (printf "%d" currentTime.Month | toInt) "bdays").Value}}{{$u =sdict .}}{{end}}{{range (index $u (str currentTime.Day))}}{{if getMember .}}{{$m =print $m "\n<@" . ">"}}{{$A =true}}{{end}}{{end}}{{if and $A (not (dbGet currentTime.Day "bdayannounced"))}}{{dbSet currentTime.Day "bdayannounced" true}}{{sendMessageNoEscape nil $m}}{{end}}{{else}}{{if $r}}{{if and (reFind `(?i)set` .Cmd) $e (not $s)}}{{if eq (len .CmdArgs) 2}}{{with $j}}{{with index . (str $i.Day)}}{{$z =$z.AppendSlice .}}{{end}}{{if not (in $z $y.ID)}}{{$z =$z.Append $y.ID}}{{.Set (str $i.Day) $z}}{{dbSet $k "bdays" $j}}{{end}}{{else}}{{$z =$z.Append $y.ID}}{{$j.Set (str $i.Day) $z}}{{dbSet $k "bdays" $j}}{{end}}{{with (dbGet $y.ID "bday").Value}}{{if ne (print .) (print $i)}}{{$q:=cslice}}{{$o:=str .Day}}{{$l:=printf "%d" .Month | toInt}}{{with sdict (dbGet (printf "%d" .Month | toInt) "bdays").Value}}{{$p:=.}}{{range index . $o}}{{if ne . $y.ID}}{{$q =$z.Append .}}{{end}}{{end}}{{$p.Set $o $q}}{{dbSet $l "bdays" $p}}{{end}}{{else}}{{$s =print "This is already " $y.Mention "'s birthday."}}{{end}}{{end}}{{if not $s}}{{dbSet $y.ID "bday" $i}}{{if $b}}{{$E =print "The bday of " $y.Mention " was set to be " ($i.Format "01/02/2006")}}{{else}}{{$E =print "The bday of " $y.Mention " was set to be " ($i.Format "02/01/2006")}}{{end}}{{end}}{{else}}{{if $b}}{{$s ="Not enough arguments passed.\nCorrect usage is: `-set 12/20/1998 @user`"}}{{else}}{{$s ="Not enough arguments passed.\nCorrect usage is: `-set 20/12/1998 @user`"}}{{end}}{{end}}{{else if reFind `(?i)stop` .Cmd}}{{cancelScheduledUniqueCC .CCID "bdays"}}{{$E ="I will no longer congratulate people on their birthday."}}{{else if reFind `start` .Cmd}}{{with .CmdArgs}}{{with index . 0 | toDuration}}{{$v =add $v .Seconds}}{{end}}{{end}}{{if or (ne (currentTime.Add (mult 1000000000 $v | toDuration)).Day ((currentTime.Add (mult 24 .TimeHour | toDuration)).Day)) (ge $v 172800)}}{{$s ="Too long delay to start sending bday messages. You can only set delays up to tommorrow at 00:00 UTC"}}{{else}}{{execCC .CCID $h 1 $v}}{{$E =print "All set! Every day at **" ((currentTime.Add (mult 1000000000 $v | toDuration)).Format "15:04 UTC") "** I will congratulate users if its their birthday."}}{{end}}{{else if reFind `(?i)get` .Cmd}}{{with .CmdArgs}}{{with index . 0 | userArg}}{{$y =.}}{{with (dbGet .ID "bday").Value}}{{if $b}}{{$E =print "The bday of " $y.Mention " is " (.UTC.Format "01/02/2006")}}{{else}}{{$E =print "The bday of " $y.Mention " is " (.UTC.Format "02/01/2006")}}{{end}}{{else}}{{$s ="This user does not have a bday set."}}{{end}}{{else}}{{$s =$B}}{{end}}{{else}}{{$s =$B}}{{end}}{{end}}{{end}}{{if and (reFind `(?i)my` .Cmd) $e (not $E) (or (and (or $c $d) (not $g)) (and (not $c) (not $d)))}}{{if not (dbGet .User.ID "bday")}}{{with $j}}{{with index . (str $i.Day)}}{{$z =$z.AppendSlice .}}{{end}}{{if not (in $z $y.ID)}}{{$z =$z.Append $y.ID}}{{.Set (str $i.Day) $z}}{{dbSet $k "bdays" $j}}{{end}}{{else}}{{$z =$z.Append $y.ID}}{{$j.Set (str $i.Day) $z}}{{dbSet $k "bdays" $j}}{{end}}{{dbSet .User.ID "bday" $i}}{{if $b}}{{$E =print "Your birthday was set to be " ($i.Format "01/02/2006")}}{{else}}{{$E =print "Your birthday was set to be " ($i.Format "02/01/2006")}}{{end}}{{else}}{{$s ="Your birthday has already been set."}}{{end}}{{end}}{{if and (reFind `(?i)del` .Cmd)}}{{$y:=.User}}{{with .CmdArgs}}{{with index . 0 | userArg}}{{if $r}}{{$y =.}}{{end}}{{else}}{{$s =print $s "\nInvalid user."}}{{end}}{{end}}{{with (dbGet $y.ID "bday").Value}}{{dbDel $y.ID "bday"}}{{$q:=cslice}}{{$o:=str .Day}}{{$l:=printf "%d" .Month | toInt}}{{with sdict (dbGet (printf "%d" .Month | toInt) "bdays").Value}}{{$p:=.}}{{range index . $o}}{{if ne . $y.ID}}{{$q =$z.Append .}}{{end}}{{end}}{{$p.Set $o $q}}{{dbSet $l "bdays" $p}}{{end}}{{$E =print "Successfully deleted the birthday from " $y.String}}{{else}}{{$s =print $y.String "doesnt have a birthday set."}}{{end}}{{end}}{{end}}{{with $s}}{{.}}{{end}}{{with $E}}{{.}}{{end}}
